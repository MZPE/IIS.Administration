parameters:
  agentPoolName: ''
  agentPoolDemandTeam: ''
  teamName: 'IIS'
  signType: 'test'
  signingIdentity: 'Microsoft'
  buildConfiguration: 'Release'
  indexSourcesAndPublishSymbols: 'false'

jobs:
- job: publish_and_sign
  pool:
    name: ${{ parameters.agentPoolName }}
    demands:
      - msbuild
      - visualstudio
      - ${{ if ne(parameters.agentPoolDemandTeam, '') }}:
        - Team -equals ${{ parameters.agentPoolDemandTeam }}

  variables:
    TeamName: ${{ parameters.teamName }} # required by MicroBuildTasks

  steps:
    - checkout: self
      clean: true
      submodules: true
      
    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@2
      displayName: 'Install Signing Plugin'
      inputs:
        signType: ${{ parameters.signType }}

    - task: MSBuild@1
      displayName: 'Build Application'
      inputs:
        msbuildLocation: src/Microsoft.IIS.Administration
        msbuildVersion: 14.0
        configuration: ${{ parameters.buildConfiguration }}
        msbuildArguments: '/t:publish /p:Configuration=${{ parameters.buildConfiguration }} /p:PublishDir=$(Build.ArtifactStagingDirectory)/IIS.Administration/Microsoft.IIS.Administration /p:SignType=${{ parameters.signType }} /p:SigningIdentity=${{ parameters.signingIdentity }}'

    - task: MSBuild@1
      displayName: 'Build Packager'
      inputs:
        msbuildLocation: src/Packager/Bundle
        msbuildVersion: 14.0
        configuration: ${{ parameters.buildConfiguration }}
        msbuildArguments: '/t:publish /p:Configuration=${{ parameters.buildConfiguration }} /p:PublishDir=$(Build.ArtifactStagingDirectory)/IIS.Administration/Microsoft.IIS.Administration/plugins /p:SignType=${{ parameters.signType }} /p:SigningIdentity=${{ parameters.signingIdentity }}'

    - task: MSBuild@1
      displayName: 'Build setup scripts'
      inputs:
        msbuildLocation: scripts
        msbuildVersion: 14.0
        configuration: ${{ parameters.buildConfiguration }}
        msbuildArguments: '/p:SignType=${{ parameters.signType }} /p:SigningIdentity=${{ parameters.signingIdentity }}'

    - task: CopyFiles@2
      displayName: 'Copy setup scripts'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/scripts/bin/signed/setup'
        Contents: '*.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/IIS.Administration/setup'
        OverWrite: true
        flattenFolders: false

    - task: CopyFiles@2
      displayName: 'Copy 3rd Party Notice'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: 'ThirdPartyNotices.txt'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/IIS.Administration'
        OverWrite: true
        flattenFolders: true

    - task: PowerShell@1
      displayName: 'Post-publish clean up'
      inputs:
        scriptName: '$(Build.SourcesDirectory)\scripts\publish\post-publish.ps1 '
        arguments: '-OutputPath $(Build.ArtifactStagingDirectory)/IIS.Administration'

    - task: ms-vseng.MicroBuildShipTasks.7c429315-71ba-4cb3-94bb-f829c95f7915.MicroBuildCodesignVerify@2
      displayName: 'Verify Signed Files'
      inputs:
        TargetFolders: '$(Build.ArtifactStagingDirectory)/IIS.Administration'

    - task: CopyFiles@2
      displayName: 'Copy Symbols'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**/Microsoft.IIS.Administration*pdb'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/symbols'
        OverWrite: true
        flattenFolders: true

    - ${{ if eq(parameters.indexSourcesAndPublishSymbols, 'true') }}:
      - task: PublishSymbols@1
        displayName: 'Enable Source Server'
        inputs:
          SymbolsFolder: '$(Build.ArtifactStagingDirectory)/symbols'
          SearchPattern: '**\*.pdb'
          SymbolServerType: TeamServices

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Symbols'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/symbols'
        ArtifactName: symbols

    - task: ms-vscs-artifact.build-tasks.artifactSymbolTask-1.artifactSymbolTask@0
      displayName: 'Publish Symbols on Symweb'
      inputs:
        symbolServiceURI: 'https://devdiv.artifacts.visualstudio.com/DefaultCollection'
        sourcePath: '$(Build.ArtifactStagingDirectory)/symbols'
        usePat: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: IIS Administration'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/IIS.Administration'
        ArtifactName: IIS.Administration
